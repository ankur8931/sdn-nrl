MODULE nat
  VAR set_src: {h1,h2,h3,h4,h5};
      set_dst: {h1,h2,h3,h4,h5};

MODULE header
  VAR ip_src: {h1,h2,h3,h4,h5,s1,s2,s3};
      ip_dst: {h1,h2,h3,h4,h5,s1,s2,s3};
      proto: {TCP, UDP, ICMP};
      action: {forward, drop, modify};

MODULE rules
   VAR src: {h1,h2,h3,h4,h5};
       dst: {h1,h2,h3,h4,h5};
       action: {allow, deny};

MODULE main
VAR location: {h1,h2,h3,h4,h5,s1,s2,s3};
    packet: header;  
    rule: rules;
    rule1: boolean;
    nat: nat;

ASSIGN
   -- init(location) := {h1,h2,h3,h4,h5};
   init(packet.ip_src)  := {h1,h2,h3,h4,h5};
   -- init(packet.ip_dst)  := {h1,h2,h3,h4,h5};
   -- init(packet.proto) := ICMP;
   init(packet.action) := forward;
   -- init(rule.src) := {h1,h2,h3,h4,h5};
   -- init(rule.dst) := {h1,h2,h3,h4,h5};
   -- init(rule.action) := allow;
   init(nat.set_src) := {h1,h2,h3,h4,h5};
   -- init(nat.set_dst) := {h1,h2,h3,h4,h5};

   init(rule1) := (packet.ip_src = h1) &
                     (rule.src = h1) & (rule.dst = h5)
                     & (rule.action = allow);

--   next(location) := case

--                     location = h1 & rule1 :s1;

--                     location = s1 & rule1:s2; 

--                     location = s2 & rule1: s3;

 --                   location = s3 & rule1: h5;

 --                    TRUE: location;
                     
 --                    esac;

   next(packet.ip_src) := case
		      (packet.action) = modify & nat.set_src=h2: h2;
                      (packet.action) = modify & nat.set_src=h3: h3;
                      (packet.action) = modify & nat.set_src=h4: h4;

                     TRUE: packet.ip_src; 
                   esac;

--   next(packet.ip_dst) := case 
--		      (packet.action) = modify & nat.set_dst=h2: h2;
--                      (packet.action) = modify & nat.set_dst=h3: h3;
--                      (packet.action) = modify & nat.set_dst=h4: h4;
                     
-- 	       	     TRUE: packet.ip_dst;
-- 		   esac;
