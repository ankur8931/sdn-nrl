MODULE header
  VAR ip_src: {h1,h2,h3,h4,h5,s1,s2,s3};
      ip_dst: {h1,h2,h3,h4,h5,s1,s2,s3};
      action: {forward, drop, modify};

MODULE rules
   VAR src: {h1,h2,h3,h4,h5};
       dst: {h1,h2,h3,h4,h5};
       action: {allow, deny};

MODULE main
VAR location: {0,1};
    packet: header;  
    vip: {ip1,ip2,ip3};
    connected: {v1,v2,v3};
    
    
ASSIGN
   init(packet.ip_src)  := {h1,h2,h3,h4,h5};
   init(packet.action) := forward;

   next(vip) := case
		      (packet.action) = modify & location = 0
                      & connected=v1    : ip1;

                      (packet.action) = modify & location = 0
                      & connected=v2    : ip2;
                      (packet.action) = modify & location = 0
                      & connected=v3    : ip3;
                     TRUE: vip; 
                   esac;
--   packet.ip_dst := vip;
--   next(vip) := case
--                       location =1 & connected=v1 : ip1;
--                       location =1 & connected=v2 : ip2;
--                       location =1 & connected=v3 : ip3;
--		     TRUE: vip;
-- 		   esac;
--   packet.ip_src := vip;
